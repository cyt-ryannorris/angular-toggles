{"name":"Toggles for AngularJS","tagline":"Providing feature toggles functionality for angular since 2013","body":"Toggles - A great way to deploy code without features\r\n===\r\n\r\nI really like Martin Fowler's [Feature Toggle](http://martinfowler.com/bliki/FeatureToggle.html) paradigm and have done some significant work making it real for Grails developers in the past.  Here's my stab at it for Angularjs.\r\n\r\nDamn, it's a sweet directive!\r\n---\r\n\r\nYessir.  Add it anywhere that you want to shut things off.  You'll need two things: add the directive to your markup...\r\n\r\n    <div toggle feature=\"cool_new_feature\">...</div>\r\n\r\nAnd make sure there's some way to tell the directive that the feature is on or off.  This requires you to configure a factory called 'Endpoints.  Here's an example:\r\n\r\n    angular.module('togglesTestApp.services', []).factory('Endpoints', function() {\r\n        return {\r\n          togglesConfigUrl: '/toggles.json'\r\n        };\r\n    });\r\n\r\nWhat you configure your togglesConfigUrl is your business.  It can be something that is generated by some backend RESTful service or a static JSON file.  It just needs to be a map of feature names and whether or not they are enabled.  All features toggled by this directive are enabled by default.\r\n\r\nExample:\r\n\r\n    {\r\n      'cool_new_feature': true,\r\n      'myExperimentalFeature': false\r\n    }\r\n\r\n\r\nInstallation\r\n---\r\n\r\nBower to the rescue!\r\n\r\n    bower install --save-dev angular-toggles\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}